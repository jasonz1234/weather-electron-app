name: Build Electron App

on:
  push:
    tags:
      - 'v*' # Triggers only on version tags like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      # Optional Wine setup for Windows build on Linux
      # - name: Install wine (Linux only)
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     sudo dpkg --add-architecture i386
      #     sudo apt-get update
      #     sudo apt-get install -y wine64 wine32

      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build-l
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build-m
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.AppImage
            dist/*.dmg
            dist/*.deb
            dist/**/latest*.yml

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts for Windows
        uses: actions/download-artifact@v4
        with:
          name: app-build-windows-latest
          path: ./dist/win

      - name: Download artifacts for Linux
        uses: actions/download-artifact@v4
        with:
          name: app-build-ubuntu-latest
          path: ./dist/linux

      - name: Download artifacts for macOS
        uses: actions/download-artifact@v4
        with:
          name: app-build-macos-latest
          path: ./dist/mac

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/win/*.exe
            dist/linux/*.AppImage
            dist/linux/*.deb
            dist/mac/*.dmg
            dist/**/latest*.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
