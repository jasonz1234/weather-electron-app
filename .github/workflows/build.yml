name: Build Electron App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - run: npm install
      - run: npm run build-l
      - uses: actions/upload-artifact@v4
        with:
          name: linux-dist
          path: dist/

  build-win-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - run: npm install
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: win-x64-dist
          path: dist/

  build-win-arm64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - run: npm install
      - run: npm run build-w-arm
      - uses: actions/upload-artifact@v4
        with:
          name: win-arm64-dist
          path: dist/

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - run: npm install
      - run: npm run build-m
      - uses: actions/upload-artifact@v4
        with:
          name: macos-dist
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-win-x64, build-win-arm64, build-macos]
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-dist
          path: dist-artifacts/linux-dist

      - name: Download Win x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: win-x64-dist
          path: dist-artifacts/win-x64-dist

      - name: Download Win arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: win-arm64-dist
          path: dist-artifacts/win-arm64-dist

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-dist
          path: dist-artifacts/macos-dist

      - name: List downloaded artifacts for debugging
        run: ls -R dist-artifacts

      - name: Get version from package.json
        id: get_version
        run: echo "RELEASE_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Create Draft GitHub Release with raw files and metadata
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          name: Weather ${{ env.RELEASE_VERSION }}
          tag_name: v${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            dist-artifacts/linux-dist/*.deb
            dist-artifacts/linux-dist/*.AppImage
            dist-artifacts/linux-dist/*.yml

            dist-artifacts/win-x64-dist/*.exe
            dist-artifacts/win-x64-dist/*.blockmap
            dist-artifacts/win-x64-dist/*.yml

            dist-artifacts/win-arm64-dist/*.exe
            dist-artifacts/win-arm64-dist/*.blockmap
            dist-artifacts/win-arm64-dist/*.yml

            dist-artifacts/macos-dist/*.dmg
            dist-artifacts/macos-dist/*.blockmap
            dist-artifacts/macos-dist/*.yml
